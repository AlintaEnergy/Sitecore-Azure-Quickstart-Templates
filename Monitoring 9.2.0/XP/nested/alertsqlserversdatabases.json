{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "infrastructure": {
      "type": "secureObject",
      "defaultValue": {}
    },
    "deploymentId": {
      "type": "string"
    },
    "omsWorkspaceName": {
      "type": "string",
      "defaultValue": "[parameters('infrastructure').omsWorkspaceName]",
      "metadata": {
        "description": "OMS Workspace name."
      }
    },
    "omsWorkspaceLocation": {
      "type": "string",
      "defaultValue": "[parameters('infrastructure').omsWorkspaceLocation]",
      "metadata": {
        "description": "the Location in which your OMS will be provisioned"
      }
    },
    "omsWorkspaceAlertRecipients": {
      "type": "string",
      "metadata": {
        "Description": "List of recipients for the email alert separated by semicolon"
      }
    },
    "actionGroupName": {
      "type": "string",
      "defaultValue": "[parameters('infrastructure').actionGroupName]",
      "metadata": {
        "description": "The name of the action group to be associated with the alerts actions"
      }
    }
  },
  "variables": {
    "actionGroupResourceId": "[resourceId('Microsoft.Insights/actionGroups',parameters('actionGroupName'))]",
    "workspaceApiVersion": "2017-04-26-preview",
    "alertResourcesApiVersion": "2018-04-16"
  },
  "resources": [
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/zcwkl')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-core-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-core-db',' database reporting high DTU')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "1"
          },
          {
            "name": "frequency",
            "value": "5"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-core-db',' database reporting high DTU')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-core-db','database: Reporting high DTU')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-core-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-core-db','database: Reporting high DTU')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/qrtuf')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-core-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-core-db',' database reporting high CPU usage')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "2"
          },
          {
            "name": "frequency",
            "value": "10"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-core-db',' database reporting high CPU usage')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-core-db',' Database: Reporting high CPU usage')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-core-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-core-db',' Database: Reporting high CPU usage')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/nrlqc')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-core-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-core-db',' database low storage space')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-core-db',' database low storage space')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-core-db',' database: Reporting low storage space')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-core-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-core-db',' database: Reporting low storage space')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/nexak')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-core-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-core-db',' database reporting high Data IO Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-core-db',' database reporting high Data IO Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-core-db',' database: Reporting high Data IO Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-core-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-core-db',' database: Reporting high Data IO Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/wdkpz')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-core-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-core-db',' database reporting high Resource Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-core-db',' database reporting high Resource Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-core-db',' database: Reporting high Resource Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-core-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-core-db',' database: Reporting high Resource Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/gzaxv')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-core-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-core-db',' database reporting high concurrent requests')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-core-db',' database reporting high concurrent requests')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-core-db',' database: Reporting high concurrent requests')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-core-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-core-db',' database: Reporting high concurrent requests')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/ugkvi')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-exmmaster-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-exmmaster-db',' database reporting high DTU')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "1"
          },
          {
            "name": "frequency",
            "value": "5"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-exmmaster-db',' database reporting high DTU')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-exmmaster-db','database: Reporting high DTU')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-exmmaster-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-exmmaster-db','database: Reporting high DTU')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/obliy')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-exmmaster-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-exmmaster-db',' database reporting high CPU usage')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "2"
          },
          {
            "name": "frequency",
            "value": "10"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-exmmaster-db',' database reporting high CPU usage')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-exmmaster-db',' Database: Reporting high CPU usage')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-exmmaster-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-exmmaster-db',' Database: Reporting high CPU usage')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/zjsqf')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-exmmaster-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-exmmaster-db',' database low storage space')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-exmmaster-db',' database low storage space')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-exmmaster-db',' database: Reporting low storage space')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-exmmaster-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-exmmaster-db',' database: Reporting low storage space')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/kprjd')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-exmmaster-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-exmmaster-db',' database reporting high Data IO Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-exmmaster-db',' database reporting high Data IO Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-exmmaster-db',' database: Reporting high Data IO Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-exmmaster-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-exmmaster-db',' database: Reporting high Data IO Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/doplw')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-exmmaster-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-exmmaster-db',' database reporting high Resource Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-exmmaster-db',' database reporting high Resource Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-exmmaster-db',' database: Reporting high Resource Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-exmmaster-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-exmmaster-db',' database: Reporting high Resource Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/rfvlu')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-exmmaster-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-exmmaster-db',' database reporting high concurrent requests')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-exmmaster-db',' database reporting high concurrent requests')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-exmmaster-db',' database: Reporting high concurrent requests')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-exmmaster-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-exmmaster-db',' database: Reporting high concurrent requests')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/ffjyn')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-forms-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-forms-db',' database reporting high DTU')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "1"
          },
          {
            "name": "frequency",
            "value": "5"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-forms-db',' database reporting high DTU')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-forms-db','database: Reporting high DTU')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-forms-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-forms-db','database: Reporting high DTU')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/rtcfd')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-forms-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-forms-db',' database reporting high CPU usage')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "2"
          },
          {
            "name": "frequency",
            "value": "10"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-forms-db',' database reporting high CPU usage')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-forms-db',' Database: Reporting high CPU usage')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-forms-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-forms-db',' Database: Reporting high CPU usage')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/qsktr')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-forms-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-forms-db',' database low storage space')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-forms-db',' database low storage space')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-forms-db',' database: Reporting low storage space')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-forms-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-forms-db',' database: Reporting low storage space')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/fdyrs')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-forms-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-forms-db',' database reporting high Data IO Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-forms-db',' database reporting high Data IO Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-forms-db',' database: Reporting high Data IO Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-forms-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-forms-db',' database: Reporting high Data IO Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/jwoep')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-forms-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-forms-db',' database reporting high Resource Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-forms-db',' database reporting high Resource Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-forms-db',' database: Reporting high Resource Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-forms-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-forms-db',' database: Reporting high Resource Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/ffvot')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-forms-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-forms-db',' database reporting high concurrent requests')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-forms-db',' database reporting high concurrent requests')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-forms-db',' database: Reporting high concurrent requests')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-forms-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-forms-db',' database: Reporting high concurrent requests')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/rpvoo')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-ma-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-ma-db',' database reporting high DTU')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "1"
          },
          {
            "name": "frequency",
            "value": "5"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-ma-db',' database reporting high DTU')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-ma-db','database: Reporting high DTU')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-ma-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-ma-db','database: Reporting high DTU')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/zlhiy')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-ma-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-ma-db',' database reporting high CPU usage')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "2"
          },
          {
            "name": "frequency",
            "value": "10"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-ma-db',' database reporting high CPU usage')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-ma-db',' Database: Reporting high CPU usage')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-ma-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-ma-db',' Database: Reporting high CPU usage')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/ufjbn')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-ma-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-ma-db',' database low storage space')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-ma-db',' database low storage space')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-ma-db',' database: Reporting low storage space')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-ma-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-ma-db',' database: Reporting low storage space')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/oazxj')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-ma-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-ma-db',' database reporting high Data IO Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-ma-db',' database reporting high Data IO Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-ma-db',' database: Reporting high Data IO Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-ma-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-ma-db',' database: Reporting high Data IO Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/mqlnu')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-ma-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-ma-db',' database reporting high Resource Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-ma-db',' database reporting high Resource Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-ma-db',' database: Reporting high Resource Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-ma-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-ma-db',' database: Reporting high Resource Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/khdcz')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-ma-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-ma-db',' database reporting high concurrent requests')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-ma-db',' database reporting high concurrent requests')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-ma-db',' database: Reporting high concurrent requests')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-ma-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-ma-db',' database: Reporting high concurrent requests')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/hchrw')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-master-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-master-db',' database reporting high DTU')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "1"
          },
          {
            "name": "frequency",
            "value": "5"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-master-db',' database reporting high DTU')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-master-db','database: Reporting high DTU')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-master-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-master-db','database: Reporting high DTU')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/lbatm')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-master-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-master-db',' database reporting high CPU usage')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "2"
          },
          {
            "name": "frequency",
            "value": "10"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-master-db',' database reporting high CPU usage')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-master-db',' Database: Reporting high CPU usage')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-master-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-master-db',' Database: Reporting high CPU usage')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/xsrta')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-master-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-master-db',' database low storage space')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-master-db',' database low storage space')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-master-db',' database: Reporting low storage space')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-master-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-master-db',' database: Reporting low storage space')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/eagqv')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-master-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-master-db',' database reporting high Data IO Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-master-db',' database reporting high Data IO Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-master-db',' database: Reporting high Data IO Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-master-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-master-db',' database: Reporting high Data IO Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/onarb')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-master-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-master-db',' database reporting high Resource Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-master-db',' database reporting high Resource Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-master-db',' database: Reporting high Resource Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-master-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-master-db',' database: Reporting high Resource Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/dhpqc')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-master-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-master-db',' database reporting high concurrent requests')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-master-db',' database reporting high concurrent requests')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-master-db',' database: Reporting high concurrent requests')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-master-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-master-db',' database: Reporting high concurrent requests')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/cnudf')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-pools-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-pools-db',' database reporting high DTU')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "1"
          },
          {
            "name": "frequency",
            "value": "5"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-pools-db',' database reporting high DTU')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-pools-db','database: Reporting high DTU')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-pools-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-pools-db','database: Reporting high DTU')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/oanpy')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-pools-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-pools-db',' database reporting high CPU usage')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "2"
          },
          {
            "name": "frequency",
            "value": "10"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-pools-db',' database reporting high CPU usage')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-pools-db',' Database: Reporting high CPU usage')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-pools-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-pools-db',' Database: Reporting high CPU usage')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/todiz')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-pools-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-pools-db',' database low storage space')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-pools-db',' database low storage space')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-pools-db',' database: Reporting low storage space')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-pools-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-pools-db',' database: Reporting low storage space')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/tppuj')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-pools-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-pools-db',' database reporting high Data IO Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-pools-db',' database reporting high Data IO Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-pools-db',' database: Reporting high Data IO Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-pools-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-pools-db',' database: Reporting high Data IO Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/fryiv')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-pools-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-pools-db',' database reporting high Resource Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-pools-db',' database reporting high Resource Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-pools-db',' database: Reporting high Resource Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-pools-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-pools-db',' database: Reporting high Resource Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/mfjoz')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-pools-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-pools-db',' database reporting high concurrent requests')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-pools-db',' database reporting high concurrent requests')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-pools-db',' database: Reporting high concurrent requests')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-pools-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-pools-db',' database: Reporting high concurrent requests')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/hdtql')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginestorage-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-processingenginestorage-db',' database reporting high DTU')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "1"
          },
          {
            "name": "frequency",
            "value": "5"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-processingenginestorage-db',' database reporting high DTU')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-processingenginestorage-db','database: Reporting high DTU')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginestorage-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-processingenginestorage-db','database: Reporting high DTU')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/twshw')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginestorage-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-processingenginestorage-db',' database reporting high CPU usage')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "2"
          },
          {
            "name": "frequency",
            "value": "10"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-processingenginestorage-db',' database reporting high CPU usage')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-processingenginestorage-db',' Database: Reporting high CPU usage')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginestorage-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-processingenginestorage-db',' Database: Reporting high CPU usage')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/mlpbz')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginestorage-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-processingenginestorage-db',' database low storage space')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-processingenginestorage-db',' database low storage space')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-processingenginestorage-db',' database: Reporting low storage space')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginestorage-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-processingenginestorage-db',' database: Reporting low storage space')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/wnucs')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginestorage-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-processingenginestorage-db',' database reporting high Data IO Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-processingenginestorage-db',' database reporting high Data IO Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-processingenginestorage-db',' database: Reporting high Data IO Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginestorage-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-processingenginestorage-db',' database: Reporting high Data IO Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/odpnw')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginestorage-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-processingenginestorage-db',' database reporting high Resource Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-processingenginestorage-db',' database reporting high Resource Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-processingenginestorage-db',' database: Reporting high Resource Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginestorage-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-processingenginestorage-db',' database: Reporting high Resource Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/mdasu')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginestorage-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-processingenginestorage-db',' database reporting high concurrent requests')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-processingenginestorage-db',' database reporting high concurrent requests')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-processingenginestorage-db',' database: Reporting high concurrent requests')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginestorage-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-processingenginestorage-db',' database: Reporting high concurrent requests')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/ptjfr')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginetasks-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-processingenginetasks-db',' database reporting high DTU')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "1"
          },
          {
            "name": "frequency",
            "value": "5"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-processingenginetasks-db',' database reporting high DTU')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-processingenginetasks-db','database: Reporting high DTU')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginetasks-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-processingenginetasks-db','database: Reporting high DTU')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/zdbct')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginetasks-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-processingenginetasks-db',' database reporting high CPU usage')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "2"
          },
          {
            "name": "frequency",
            "value": "10"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-processingenginetasks-db',' database reporting high CPU usage')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-processingenginetasks-db',' Database: Reporting high CPU usage')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginetasks-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-processingenginetasks-db',' Database: Reporting high CPU usage')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/acuhe')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginetasks-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-processingenginetasks-db',' database low storage space')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-processingenginetasks-db',' database low storage space')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-processingenginetasks-db',' database: Reporting low storage space')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginetasks-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-processingenginetasks-db',' database: Reporting low storage space')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/vylkt')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginetasks-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-processingenginetasks-db',' database reporting high Data IO Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-processingenginetasks-db',' database reporting high Data IO Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-processingenginetasks-db',' database: Reporting high Data IO Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginetasks-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-processingenginetasks-db',' database: Reporting high Data IO Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/vwxle')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginetasks-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-processingenginetasks-db',' database reporting high Resource Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-processingenginetasks-db',' database reporting high Resource Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-processingenginetasks-db',' database: Reporting high Resource Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginetasks-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-processingenginetasks-db',' database: Reporting high Resource Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/kywfh')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginetasks-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-processingenginetasks-db',' database reporting high concurrent requests')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-processingenginetasks-db',' database reporting high concurrent requests')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-processingenginetasks-db',' database: Reporting high concurrent requests')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-processingenginetasks-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-processingenginetasks-db',' database: Reporting high concurrent requests')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/zxbif')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-refdata-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-refdata-db',' database reporting high DTU')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "1"
          },
          {
            "name": "frequency",
            "value": "5"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-refdata-db',' database reporting high DTU')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-refdata-db','database: Reporting high DTU')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-refdata-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-refdata-db','database: Reporting high DTU')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/vphuq')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-refdata-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-refdata-db',' database reporting high CPU usage')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "2"
          },
          {
            "name": "frequency",
            "value": "10"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-refdata-db',' database reporting high CPU usage')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-refdata-db',' Database: Reporting high CPU usage')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-refdata-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-refdata-db',' Database: Reporting high CPU usage')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/dyatv')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-refdata-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-refdata-db',' database low storage space')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-refdata-db',' database low storage space')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-refdata-db',' database: Reporting low storage space')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-refdata-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-refdata-db',' database: Reporting low storage space')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/izwxs')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-refdata-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-refdata-db',' database reporting high Data IO Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-refdata-db',' database reporting high Data IO Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-refdata-db',' database: Reporting high Data IO Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-refdata-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-refdata-db',' database: Reporting high Data IO Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/sluzw')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-refdata-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-refdata-db',' database reporting high Resource Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-refdata-db',' database reporting high Resource Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-refdata-db',' database: Reporting high Resource Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-refdata-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-refdata-db',' database: Reporting high Resource Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/zpxqy')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-refdata-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-refdata-db',' database reporting high concurrent requests')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-refdata-db',' database reporting high concurrent requests')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-refdata-db',' database: Reporting high concurrent requests')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-refdata-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-refdata-db',' database: Reporting high concurrent requests')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/wgnlr')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-reporting-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-reporting-db',' database reporting high DTU')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "1"
          },
          {
            "name": "frequency",
            "value": "5"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-reporting-db',' database reporting high DTU')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-reporting-db','database: Reporting high DTU')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-reporting-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-reporting-db','database: Reporting high DTU')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/nbejf')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-reporting-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-reporting-db',' database reporting high CPU usage')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "2"
          },
          {
            "name": "frequency",
            "value": "10"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-reporting-db',' database reporting high CPU usage')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-reporting-db',' Database: Reporting high CPU usage')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-reporting-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-reporting-db',' Database: Reporting high CPU usage')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/ihrtr')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-reporting-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-reporting-db',' database low storage space')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-reporting-db',' database low storage space')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-reporting-db',' database: Reporting low storage space')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-reporting-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-reporting-db',' database: Reporting low storage space')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/pvypi')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-reporting-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-reporting-db',' database reporting high Data IO Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-reporting-db',' database reporting high Data IO Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-reporting-db',' database: Reporting high Data IO Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-reporting-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-reporting-db',' database: Reporting high Data IO Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/svhej')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-reporting-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-reporting-db',' database reporting high Resource Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-reporting-db',' database reporting high Resource Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-reporting-db',' database: Reporting high Resource Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-reporting-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-reporting-db',' database: Reporting high Resource Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/yojab')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-reporting-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-reporting-db',' database reporting high concurrent requests')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-reporting-db',' database reporting high concurrent requests')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-reporting-db',' database: Reporting high concurrent requests')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-reporting-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-reporting-db',' database: Reporting high concurrent requests')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/zvdbc')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard0-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-shard0-db',' database reporting high DTU')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "1"
          },
          {
            "name": "frequency",
            "value": "5"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-shard0-db',' database reporting high DTU')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-shard0-db','database: Reporting high DTU')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard0-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-shard0-db','database: Reporting high DTU')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/drowd')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard0-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-shard0-db',' database reporting high CPU usage')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "2"
          },
          {
            "name": "frequency",
            "value": "10"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-shard0-db',' database reporting high CPU usage')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-shard0-db',' Database: Reporting high CPU usage')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard0-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-shard0-db',' Database: Reporting high CPU usage')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/dftio')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard0-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-shard0-db',' database low storage space')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-shard0-db',' database low storage space')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-shard0-db',' database: Reporting low storage space')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard0-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-shard0-db',' database: Reporting low storage space')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/atjzm')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard0-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-shard0-db',' database reporting high Data IO Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-shard0-db',' database reporting high Data IO Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-shard0-db',' database: Reporting high Data IO Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard0-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-shard0-db',' database: Reporting high Data IO Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/yxcwb')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard0-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-shard0-db',' database reporting high Resource Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-shard0-db',' database reporting high Resource Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-shard0-db',' database: Reporting high Resource Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard0-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-shard0-db',' database: Reporting high Resource Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/csotm')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard0-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-shard0-db',' database reporting high concurrent requests')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-shard0-db',' database reporting high concurrent requests')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-shard0-db',' database: Reporting high concurrent requests')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard0-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-shard0-db',' database: Reporting high concurrent requests')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/pjnty')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard1-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-shard1-db',' database reporting high DTU')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "1"
          },
          {
            "name": "frequency",
            "value": "5"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-shard1-db',' database reporting high DTU')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-shard1-db','database: Reporting high DTU')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard1-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-shard1-db','database: Reporting high DTU')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/cqyal')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard1-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-shard1-db',' database reporting high CPU usage')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "2"
          },
          {
            "name": "frequency",
            "value": "10"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-shard1-db',' database reporting high CPU usage')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-shard1-db',' Database: Reporting high CPU usage')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard1-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-shard1-db',' Database: Reporting high CPU usage')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/imwfb')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard1-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-shard1-db',' database low storage space')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-shard1-db',' database low storage space')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-shard1-db',' database: Reporting low storage space')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard1-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-shard1-db',' database: Reporting low storage space')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/aamlw')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard1-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-shard1-db',' database reporting high Data IO Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-shard1-db',' database reporting high Data IO Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-shard1-db',' database: Reporting high Data IO Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard1-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-shard1-db',' database: Reporting high Data IO Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/iueqb')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard1-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-shard1-db',' database reporting high Resource Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-shard1-db',' database reporting high Resource Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-shard1-db',' database: Reporting high Resource Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard1-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-shard1-db',' database: Reporting high Resource Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/mjaue')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard1-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-shard1-db',' database reporting high concurrent requests')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-shard1-db',' database reporting high concurrent requests')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-shard1-db',' database: Reporting high concurrent requests')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-shard1-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-shard1-db',' database: Reporting high concurrent requests')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/yretd')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-smm-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-smm-db',' database reporting high DTU')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "1"
          },
          {
            "name": "frequency",
            "value": "5"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-smm-db',' database reporting high DTU')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-smm-db','database: Reporting high DTU')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-smm-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-smm-db','database: Reporting high DTU')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/grudm')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-smm-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-smm-db',' database reporting high CPU usage')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "2"
          },
          {
            "name": "frequency",
            "value": "10"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-smm-db',' database reporting high CPU usage')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-smm-db',' Database: Reporting high CPU usage')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-smm-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-smm-db',' Database: Reporting high CPU usage')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/rmcaq')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-smm-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-smm-db',' database low storage space')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-smm-db',' database low storage space')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-smm-db',' database: Reporting low storage space')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-smm-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-smm-db',' database: Reporting low storage space')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/wxuhd')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-smm-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-smm-db',' database reporting high Data IO Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-smm-db',' database reporting high Data IO Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-smm-db',' database: Reporting high Data IO Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-smm-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-smm-db',' database: Reporting high Data IO Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/kdgfo')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-smm-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-smm-db',' database reporting high Resource Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-smm-db',' database reporting high Resource Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-smm-db',' database: Reporting high Resource Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-smm-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-smm-db',' database: Reporting high Resource Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/dawml')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-smm-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-smm-db',' database reporting high concurrent requests')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-smm-db',' database reporting high concurrent requests')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-smm-db',' database: Reporting high concurrent requests')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-smm-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-smm-db',' database: Reporting high concurrent requests')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/dphvs')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-tasks-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-tasks-db',' database reporting high DTU')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "1"
          },
          {
            "name": "frequency",
            "value": "5"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-tasks-db',' database reporting high DTU')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-tasks-db','database: Reporting high DTU')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-tasks-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-tasks-db','database: Reporting high DTU')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/jnxee')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-tasks-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-tasks-db',' database reporting high CPU usage')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "2"
          },
          {
            "name": "frequency",
            "value": "10"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-tasks-db',' database reporting high CPU usage')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-tasks-db',' Database: Reporting high CPU usage')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-tasks-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-tasks-db',' Database: Reporting high CPU usage')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/crdjf')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-tasks-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-tasks-db',' database low storage space')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-tasks-db',' database low storage space')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-tasks-db',' database: Reporting low storage space')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-tasks-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-tasks-db',' database: Reporting low storage space')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/tzmsd')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-tasks-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-tasks-db',' database reporting high Data IO Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-tasks-db',' database reporting high Data IO Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-tasks-db',' database: Reporting high Data IO Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-tasks-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-tasks-db',' database: Reporting high Data IO Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/qdraj')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-tasks-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-tasks-db',' database reporting high Resource Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-tasks-db',' database reporting high Resource Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-tasks-db',' database: Reporting high Resource Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-tasks-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-tasks-db',' database: Reporting high Resource Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/rexdr')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-tasks-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-tasks-db',' database reporting high concurrent requests')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-tasks-db',' database reporting high concurrent requests')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-tasks-db',' database: Reporting high concurrent requests')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-tasks-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-tasks-db',' database: Reporting high concurrent requests')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/tjfsz')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-web-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-web-db',' database reporting high DTU')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "1"
          },
          {
            "name": "frequency",
            "value": "5"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-web-db',' database reporting high DTU')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-web-db','database: Reporting high DTU')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-web-db','\"; let metricName =\"dtu_consumption_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m)| top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "5",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-web-db','database: Reporting high DTU')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/bytad')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-web-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-web-db',' database reporting high CPU usage')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "2"
          },
          {
            "name": "frequency",
            "value": "10"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-web-db',' database reporting high CPU usage')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-web-db',' Database: Reporting high CPU usage')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-web-db','\"; let metricName =\"cpu_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "10",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-web-db',' Database: Reporting high CPU usage')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/ljmkd')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-web-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-web-db',' database low storage space')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-web-db',' database low storage space')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-web-db',' database: Reporting low storage space')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-web-db','\"; let metricName =\"storage_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider== resourceProvider and ResourceId contains resourceIdContains and MetricName== metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "0",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-web-db',' database: Reporting low storage space')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "75",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/geell')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-web-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-web-db',' database reporting high Data IO Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-web-db',' database reporting high Data IO Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-web-db',' database: Reporting high Data IO Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-web-db','\";let metricName =\"physical_data_read_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-web-db',' database: Reporting high Data IO Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/ghlcq')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-web-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-web-db',' database reporting high Resource Utilization')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-web-db',' database reporting high Resource Utilization')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ',parameters('deploymentId'),'-web-db',' database: Reporting high Resource Utilization')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-web-db','\";let metricName =\"log_write_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ',parameters('deploymentId'),'-web-db',' database: Reporting high Resource Utilization')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('omsWorkspaceName'), '/ptxhw')]",
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "[variables('workspaceApiVersion')]",
      "tags": {},
      "properties": {
        "etag": "*",
        "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-web-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
        "displayName": "[concat(parameters('deploymentId'),'-web-db',' database reporting high concurrent requests')]",
        "version": "2.0",
        "category": "AlertIbiza",
        "tags": [
          {
            "name": "tier",
            "value": "3"
          },
          {
            "name": "frequency",
            "value": "15"
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('deploymentId'),'-web-db',' database reporting high concurrent requests')]",
      "type": "Microsoft.Insights/scheduledqueryrules",
      "apiVersion": "[variables('alertResourcesApiVersion')]",
      "location": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
      "tags": {},
      "properties": {
        "description": "[concat('Check ', parameters('deploymentId'),'-web-db',' database: Reporting high concurrent requests')]",
        "enabled": "true",
        "source": {
          "query": "[concat('let resourceName = \"',parameters('deploymentId'),'-web-db','\";let metricName =\"workers_percent\";let resourceProvider =\"MICROSOFT.SQL\";let resourceIdContains =\"/DATABASES/\";AzureMetrics | where ResourceProvider==resourceProvider and ResourceId contains resourceIdContains and MetricName==metricName and Resource == toupper(resourceName) | summarize AggregatedValue = avg(Maximum) by bin(TimeGenerated, 1m),Resource | top 30 by TimeGenerated')]",
          "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "15",
          "timeWindowInMinutes": "60"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "1",
          "throttlingInMin": "0",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupResourceId')]"
            ],
            "emailSubject": "[concat('Check ', parameters('deploymentId'),'-web-db',' database: Reporting high concurrent requests')]"
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": "95",
            "metricTrigger": {
              "thresholdOperator": "GreaterThan",
              "threshold": "30",
              "metricTriggerType": "Total"
            }
          }
        }
      }
    }
  ]
}